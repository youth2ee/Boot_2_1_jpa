## server port 변경
server.port=80

## data source
spring.datasource.username=spring01
spring.datasource.password=Root!234
#spring.datasource.url=jdbc:mysql://192.168.123.100:3306/spring01
#spring.datasource.url=jdbc:mysql://211.238.142.20:3306/spring01
spring.datasource.url=jdbc:mysql://192.168.235.100:3306/spring01
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

## jsp
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

## Transaction 처리 ##
spring.aop.proxy-target-class=true



## Hibernate : JPA
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#VO클래스의 멤버변수명이 자동으로 DB에 컬럼명과 연결될 때, 
#regDate의 형태면 이 설정이 필요함(camel표기법)
#reg_date의 형태면 이 설정이 필요하지 않음(snake표기법)

#JPA에 의해서 자동으로 생성되고 실행되는 SQL명령어를 실시간으로 출력
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


## File Upload ##
# Multipart library의 사용여부만 결정해주면 된다. true면 사용하겠다.
spring.servlet.multipart.enabled=true
# file 하나당 최대크기 설정하기 : 하나의 크기 
spring.servlet.multipart.max-file-size=10MB
# 한번 요청시 여러파일을 넘길경우 총 파일의 최대크기지정 : 한번 요청시 토탈의 크기
spring.servlet.multipart.max-request-size=100MB

## 다국적 메시지 ## 
#message만 치면 알아서 인식한다. 
spring.messages.basename=message/message
spring.messages.encoding=UTF-8
#메시지 보여줄때, 키가 만약 존재하지 않을때 true면 그냥 그 코드를 출력하겠다. / false면 에러를 발생시키겠다.
#메시지가 없는 코드일 경우 예외를 발생 : true면 예외를 발생시키지 않고 코드를 출력 / false면 예외를 발생
spring.messages.use-code-as-default-message=false
#message를 수정하였을 때, 재시작안하고 실시간으로 읽어드린다. 이 설정은 실시간의 시간을 설정한다. 60이면 60초
spring.messages.cache-duration=60